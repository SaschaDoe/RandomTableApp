import {Table} from "../table";
import {TableEntry} from "../tableEntry";
import {TableTitles} from "../tableTitles";
import {chooseHigherPowerReturnDescription, createHigherPowerReturnUniqueName} from "../../entites/character/charStore";
import {CharacterShadowArchetypeTable} from "./characterShadowArchetypeTable";

export class CharacterAsDeviceTable extends Table{
    constructor(){
        let entries = [] as TableEntry[];
        entries.push(new TableEntry("allegorical character")) //joker, godzilla (nature chaos)
        entries.push(new TableEntry("comedic relief"))
        entries.push(new TableEntry("cop"))
        entries.push(new TableEntry("detective"))
        entries.push(new TableEntry("elders"))
        entries.push(new TableEntry("nerdy"))
        entries.push(new TableEntry("love interest"))
        entries.push(new TableEntry("no sympathy for this stereotype"))
        entries.push(new TableEntry("profession trope"))
        entries.push(new TableEntry("organisation"))
        entries.push(new TableEntry("parent"))
        entries.push(new TableEntry("queer"))
        entries.push(new TableEntry("minority"))
        entries.push(new TableEntry("youngster"))
        entries.push(new TableEntry("gender"))
        entries.push(new TableEntry("pretty"))
        entries.push(new TableEntry("angry black man"))
        entries.push(new TableEntry("matron"))
        entries.push(new TableEntry("the barber"))
        entries.push(new TableEntry("the bard"))
        entries.push(new TableEntry("big eater"))
        entries.push(new TableEntry("bridezilla"))
        entries.push(new TableEntry("incompetent sidekick"))
        entries.push(new TableEntry("competent sidekick"))
        entries.push(new TableEntry("dealer"))
        entries.push(new TableEntry("wise old man"))
        entries.push(new TableEntry("casanova"))
        entries.push(new TableEntry("childhood friend"))
        entries.push(new TableEntry("cowboy cop"))
        entries.push(new TableEntry("covert antagonist"))
        entries.push(new TableEntry("uncovert antagonist"))
        entries.push(new TableEntry("creepy twins"))
        entries.push(new TableEntry("cruel cheerleader"))
        entries.push(new TableEntry("dark messiah"))
        entries.push(new TableEntry("dead end veteran"))
        entries.push(new TableEntry("dump"))
        entries.push(new TableEntry("dumb muscle"))
        entries.push(new TableEntry("everyman"))
        entries.push(new TableEntry("fake ultimate hero"))
        entries.push(new TableEntry("fan service"))
        entries.push(new TableEntry("fanservice"))
        entries.push(new TableEntry("grand dame"))
        entries.push(new TableEntry("fame fatale"))
        entries.push(new TableEntry("hermit"))
        entries.push(new TableEntry("adulthood like kid"))
        entries.push(new TableEntry("knight in shining armor"))
        entries.push(new TableEntry("lethal chef"))
        entries.push(new TableEntry("lower class"))
        entries.push(new TableEntry("bourgoisy"))
        entries.push(new TableEntry("mayor pain"))
        entries.push(new TableEntry("most wanted"))
        entries.push(new TableEntry("narcissist"))
        entries.push(new TableEntry("person of mass destruction"))
        entries.push(new TableEntry("the rival"))
        entries.push(new TableEntry("nurse"))
        entries.push(new TableEntry("the scrooge"))
        entries.push(new TableEntry("politician"))
        entries.push(new TableEntry("stage magician"))
        entries.push(new TableEntry("starving artist"))
        entries.push(new TableEntry("stupid boss"))
        entries.push(new TableEntry("tall dark and handsome"))
        entries.push(new TableEntry("ugly cute"))
        entries.push(new TableEntry("unsatisfiable customer"))
        entries.push(new TableEntry("vampire lolita"))
        entries.push(new TableEntry("white collar worker"))
        entries.push(new TableEntry("wicked whitch"))
        entries.push(new TableEntry("broken ace"))
        entries.push(new TableEntry("shadow archetype:").withCascadingRole(new CharacterShadowArchetypeTable()))
        entries.push(new TableEntry("proxy for human vs machine"))
        entries.push(new TableEntry("proxy for emotion vs stoicism"))
        entries.push(new TableEntry("proxy for nature vs industrialisation"))
        entries.push(new TableEntry("willing channeler for").withFunctionString(chooseHigherPowerReturnDescription))
        super(entries, TableTitles.CharacterAsDevice);
    }
}