import {Table} from "../table";
import {TableEntry} from "../tableEntry";
import {TableTitles} from "../tableTitles";
import {TableType} from "../tableType";
import {ProfessionTable} from "../charTables/professionTable";
import {chooseNSCReturnUniqueName} from "../../entites/character/charStore";
import {AnimalTable} from "../charTables/animalTable";
import {FantasyCreatureTable} from "../charTables/fantasyCreatureTable";
import {WeaponTable} from "../artefactTables/weaponTable";
import {ColourTable} from "../otherTables/colourTable";
import {DisadvantageTable} from "../charTables/disadvantageTable";
import {AdvantageTable} from "../charTables/advantageTable";
import {AttributeTable} from "../charTables/attributeTable";

export class RulerNicknamesTable extends Table{
    constructor(){
        let entries = [] as TableEntry[];
        entries.push(new TableEntry("the Abandoned"))
        entries.push(new TableEntry("the Absolutist"))
        entries.push(new TableEntry("the Accursed"))
        entries.push(new TableEntry("the Adopted"))
        entries.push(new TableEntry("the Affable")) //Liebenswürdig
        entries.push(new TableEntry("the Aggressor"))
        entries.push(new TableEntry("the").withCascadingRole(new ProfessionTable()))
        entries.push(new TableEntry("slayer of").withFunctionString(chooseNSCReturnUniqueName))
        entries.push(new TableEntry("the Fair"))
        entries.push(new TableEntry("the Asleep"))
        entries.push(new TableEntry("the Bad"))
        entries.push(new TableEntry("the Bald"))
        entries.push(new TableEntry("the Bastard"))
        entries.push(new TableEntry("the").withCascadingRole(new AnimalTable()))
        entries.push(new TableEntry("the").withCascadingRole(new FantasyCreatureTable()));
        entries.push(new TableEntry("the").withCascadingRole(new WeaponTable()))
        entries.push(new TableEntry("the prince"))
        entries.push(new TableEntry("the").withCascadingRole(new ColourTable()))
        entries.push(new TableEntry("the blessed"))
        entries.push(new TableEntry("the").withCascadingRole(new DisadvantageTable()))
        entries.push(new TableEntry("the").withCascadingRole(new AdvantageTable()))
        entries.push(new TableEntry("the Blind"))
        entries.push(new TableEntry("the Bold"))
        entries.push(new TableEntry("the Boneless"))
        entries.push(new TableEntry("the Brave"))
        entries.push(new TableEntry("the Brilliant"))
        entries.push(new TableEntry("the Broad-shouldered"))
        entries.push(new TableEntry("the Builder"))
        entries.push(new TableEntry("the Chaste")) //Keuchhe
        entries.push(new TableEntry("the Chief"))
        entries.push(new TableEntry("the Colonizer"))
        entries.push(new TableEntry("the Cruel"))
        entries.push(new TableEntry("the Crusader"))
        entries.push(new TableEntry("the Damned"))
        entries.push(new TableEntry("the Desired"))
        entries.push(new TableEntry("the Devil"))
        entries.push(new TableEntry("the Diplomat"))
        entries.push(new TableEntry("the Sluggard")) //Träge
        entries.push(new TableEntry("the Do-Nothing"))
        entries.push(new TableEntry("the Drunkard"))
        entries.push(new TableEntry("Earth-Shaker"))
        entries.push(new TableEntry("the Educator"))
        entries.push(new TableEntry("the Elder"))
        entries.push(new TableEntry("the Eloquent"))
        entries.push(new TableEntry("the Emperor-King"))
        entries.push(new TableEntry("the Enabler"))
        entries.push(new TableEntry("the Enlightened"))
        entries.push(new TableEntry("the Executioner"))
        entries.push(new TableEntry("the Fair"))
        entries.push(new TableEntry("the Fat"))
        entries.push(new TableEntry("the Fearless"))
        entries.push(new TableEntry("the Fighter"))
        entries.push(new TableEntry("the Flatnosed"))
        entries.push(new TableEntry("the Forkbeard"))
        entries.push(new TableEntry("the Fortunate"))
        entries.push(new TableEntry("the Founder"))
        entries.push(new TableEntry("from Overseas"))
        entries.push(new TableEntry("the Generous"))
        entries.push(new TableEntry("the Gentle"))
        entries.push(new TableEntry("the Glorious"))
        entries.push(new TableEntry("the God-Given"))
        entries.push(new TableEntry("the God-like"))
        entries.push(new TableEntry("the God-Loving"))
        entries.push(new TableEntry("the Good"))
        entries.push(new TableEntry("the Good King"))
        entries.push(new TableEntry("the Good Father"))
        entries.push(new TableEntry("the Hairy"))
        entries.push(new TableEntry("the Handsome"))
        entries.push(new TableEntry("the Hidden"))
        entries.push(new TableEntry("the Mysterious"))
        entries.push(new TableEntry("the Magical"))
        entries.push(new TableEntry("the Ill-Tempered"))
        entries.push(new TableEntry("the Illustrious"))
        entries.push(new TableEntry("the Impaler"))
        entries.push(new TableEntry("the Impotent")) //Nachlässige
        entries.push(new TableEntry("the Invincible"))
        entries.push(new TableEntry("the Just"))
        entries.push(new TableEntry("the Kind"))
        entries.push(new TableEntry("the Kind-Hearted"))
        entries.push(new TableEntry("the Without-Land"))
        entries.push(new TableEntry("the Lame"))
        entries.push(new TableEntry("the Last"))
        entries.push(new TableEntry("the Lawgiver"))
        entries.push(new TableEntry("the Liberal"))
        entries.push(new TableEntry("the Lionheart"))
        entries.push(new TableEntry("the Little"))
        entries.push(new TableEntry("the Longhaired"))
        entries.push(new TableEntry("the Mad"))
        entries.push(new TableEntry("the Magnificent"))
        entries.push(new TableEntry("the Martyr"))
        entries.push(new TableEntry("the Memorable"))
        entries.push(new TableEntry("the Mild"))
        entries.push(new TableEntry("the Mighty"))
        entries.push(new TableEntry("the Monk"))
        entries.push(new TableEntry("the Noble"))
        entries.push(new TableEntry("the Oath-Taker"))
        entries.push(new TableEntry("the Old"))
        entries.push(new TableEntry("the One-Eyed"))
        entries.push(new TableEntry("the Oppressed"))
        entries.push(new TableEntry("the Outlaw"))
        entries.push(new TableEntry("the Peaceful"))
        entries.push(new TableEntry("the Peacemaker"))
        entries.push(new TableEntry("the Pious")) //Fromme
        entries.push(new TableEntry("the Poison King"))
        entries.push(new TableEntry("the Powerful"))
        entries.push(new TableEntry("the Prudent"))
        entries.push(new TableEntry("the Quiet"))
        entries.push(new TableEntry("the Reformer"))
        entries.push(new TableEntry("the Restorer"))
        entries.push(new TableEntry("the Righteous"))
        entries.push(new TableEntry("the Rightly Guided"))
        entries.push(new TableEntry("the Sacrificer"))
        entries.push(new TableEntry("the Saint"))
        entries.push(new TableEntry("the Savior"))
        entries.push(new TableEntry("the Sea-Wolf"))
        entries.push(new TableEntry("the Short"))
        entries.push(new TableEntry("the Silent"))
        entries.push(new TableEntry("the Simple"))
        entries.push(new TableEntry("the Sorrowful")) //Traurige
        entries.push(new TableEntry("the Spirited"))
        entries.push(new TableEntry("the Stammerer"))
        entries.push(new TableEntry("the Strict"))
        entries.push(new TableEntry("the Strong"))
        entries.push(new TableEntry("the").withCascadingRole(new AttributeTable()))
        entries.push(new TableEntry("the Sun King"))
        entries.push(new TableEntry("the Tall"))
        entries.push(new TableEntry("the Terrible"))
        entries.push(new TableEntry("the Thunderbolt"))
        entries.push(new TableEntry("the Till the End of the World Passionate"))
        entries.push(new TableEntry("the Tough"))
        entries.push(new TableEntry("the Traditionalist"))
        entries.push(new TableEntry("the Treacherous"))
        entries.push(new TableEntry("the Tyrant"))
        entries.push(new TableEntry("the Unfortunate"))
        entries.push(new TableEntry("the Unique"))
        entries.push(new TableEntry("the Unready"))
        entries.push(new TableEntry("the Usurper"))
        entries.push(new TableEntry("the Victorious"))
        entries.push(new TableEntry("the Virtuous"))
        entries.push(new TableEntry("the Warlike"))
        entries.push(new TableEntry("the Weak"))
        entries.push(new TableEntry("the Well-Beloved"))
        entries.push(new TableEntry("the Who-Fights-Alone"))
        entries.push(new TableEntry("the Wicked"))
        entries.push(new TableEntry("the Wise"))
        entries.push(new TableEntry("the Young"))
        entries.push(new TableEntry("the Younger"))
        super(entries, TableTitles.RulerNicknames);
        this.tableType = TableType.Other;
    }
}